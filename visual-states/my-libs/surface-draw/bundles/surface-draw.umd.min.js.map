{"version":3,"sources":["../../../projects/surface-draw/src/lib/surface-data.ts","../../../projects/surface-draw/src/lib/viewcontrol.ts","../../../projects/surface-draw/src/lib/surface-draw.service.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/surface-draw/src/lib/surface-draw.component.ts","../../../projects/surface-draw/src/lib/surface-draw.module.ts"],"names":["screenPoint","modelPoint","surface","event","stateEvent","this","ViewControl","scale","offsetX","offsetY","width","height","switch","prototype","zoomIn","zoomOut","translateXPlus","translateXMinus","translateYPlus","translateYMinus","invalidate","SurfaceDrawService","factory","ɵfac","providedIn","Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","SurfaceDrawComponent","scaleValue","offsetXValue","offsetYValue","widthValue","heightValue","switchValue","drawAxises","scaleChange","EventEmitter","offsetXChange","offsetYChange","widthChange","heightChange","center","Point","pointerPosition","canvasValid","isPan","down","move","up","wheelRotate","defineProperty","val","emit","invalidateDrawing","ngOnInit","offscreenCanvas","document","createElement","ngAfterViewInit","_this","context","getContext","alpha","window","onresize","resizeCanvas","bind","requestAnimationFrame","divElement","_","el","nativeElement","clientWidth","clientHeight","canvasRef","ngOnChanges","drawOffscreen","line","x1","y1","x2","y2","strokeStyle","beginPath","moveTo","toDeviceX","toDeviceY","lineTo","stroke","polyline","points","x","y","polygon","fillStyle","closePath","oldFill","fill","bezierCurve","cp1x","cp1y","cp2x","cp2y","bezierCurveTo","rect","w","h","toDeviceScale","strokeRect","text","font","oldFont","measureText","fillRect","textBaseline","textAlign","fillText","image","img","drawImage","fromDeviceScale","getCenter","centerX","offsetLeft","centerY","offsetTop","drawData","ctx","clearRect","lineWidth","canvas","drawItems","_c","_d","entry","getLayer","draw","drawGrid","_e","_f","drawVerticalRuler","drawHorizontalRuler","toLogical","point","result","step","len","cnt","drawRulerText","horizontal","logicalPt","Math","round","toString","setLineDash","hw","drawCoordinateSystem","calcHeight","onMousedown","pt","clientX","clientY","sd","SurfaceData","onMousemove","onMouseup","onPanStart","touches","preventDefault","touch","onPanMove","onPanEnd","changedTouches","onMousewheel","selectors","viewQuery","rf","$event","i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵelementEnd","SurfaceDrawModule","imports","declarations","exports"],"mappings":"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","sourcesContent":["import { Point } from 'my-libs/base-geometry';\r\nimport { ISurfaceDraw } from 'my-libs/base-draw';\r\n\r\nexport class SurfaceData {\r\n  constructor(public screenPoint: Point, public modelPoint: Point,\r\n              public surface: ISurfaceDraw,\r\n              public event: any, public stateEvent: any) {\r\n  }\r\n}\r\n","export class ViewControl {\r\n  public scale = 1.0;\r\n  public offsetX = 0.0;\r\n  public offsetY = 0.0;\r\n  public width = 0.0;\r\n  public height = 0.0;\r\n  public switch = false;\r\n\r\n  public zoomIn(): void {\r\n    this.scale /= 0.80;\r\n  }\r\n\r\n  public zoomOut(): void {\r\n    this.scale *= 0.80;\r\n  }\r\n\r\n  public translateXPlus(): void {\r\n    this.offsetX += 25;\r\n  }\r\n\r\n  public translateXMinus(): void {\r\n    this.offsetX -= 25;\r\n  }\r\n\r\n  public translateYPlus(): void {\r\n    this.offsetY += 25;\r\n  }\r\n\r\n  public translateYMinus(): void {\r\n    this.offsetY -= 25;\r\n  }\r\n\r\n  public invalidate(): void {\r\n    this.switch = !this.switch;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SurfaceDrawService {\n\n  constructor() { }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component, OnInit, ViewChild, Input, Output, EventEmitter, ElementRef, AfterViewInit, OnChanges, HostListener } from '@angular/core';\nimport { ISurfaceDraw, IDrawable, IPoint } from 'my-libs/base-draw';\nimport { Point } from 'my-libs/base-geometry';\nimport { SurfaceData } from './surface-data';\n\n@Component({\n  selector: 'lib-surface-draw',\n  template: `\n  <div #divElement class=\"div-root\">\n    <canvas #myCanvas class=\"canvas-main\">\n    </canvas>\n  </div>\n  `,\n  styles: [`\n  .canvas-main {\n    touch-action: none !important;\n  }\n\n  .div-root {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n  }\n  `]\n})\nexport class SurfaceDrawComponent implements OnInit, OnChanges, AfterViewInit, ISurfaceDraw {\n  @ViewChild('myCanvas', { static: true }) canvasRef: ElementRef;\n  @ViewChild('divElement', { static: true }) divElement: any;\n\n  @Input() drawItems: IDrawable[];\n\n  private offscreenCanvas: HTMLCanvasElement;\n\n  private scaleValue = 1;\n  private offsetXValue = 0;\n  private offsetYValue = 0;\n  private widthValue = 0;\n  private heightValue = 0;\n  private switchValue = false;\n\n  @Input() drawAxises = false;\n\n  @Output() scaleChange = new EventEmitter();\n  @Output() offsetXChange = new EventEmitter();\n  @Output() offsetYChange = new EventEmitter();\n  @Output() widthChange = new EventEmitter();\n  @Output() heightChange = new EventEmitter();\n\n  private center: Point = new Point(0, 0);\n  private pointerPosition: Point = new Point(0, 0);\n\n  private context: CanvasRenderingContext2D;\n  private canvasValid = false;\n  // private lastRefreshHandle: number;\n  // private cancelRefreshCounter: number = 0;\n\n  private isPan = false;\n\n  @Output() down: EventEmitter<SurfaceData> = new EventEmitter<SurfaceData>();\n  @Output() move: EventEmitter<SurfaceData> = new EventEmitter<SurfaceData>();\n  @Output() up: EventEmitter<SurfaceData> = new EventEmitter<SurfaceData>();\n  @Output() wheelRotate: EventEmitter<SurfaceData> = new EventEmitter<SurfaceData>();\n  // @Output() click: EventEmitter<Point> = new EventEmitter<Point>();\n\n  private stateEvent: any = null;\n\n  constructor() { }\n\n  @Input()\n  set scale(val) {\n    if (this.scaleValue !== val) {\n      this.scaleValue = val;\n      this.scaleChange.emit(this.scaleValue);\n    }\n  }\n\n  get scale(): number {\n    return this.scaleValue;\n  }\n\n  @Input()\n  set offsetX(val) {\n    if (this.offsetXValue !== val) {\n      this.offsetXValue = val;\n      this.offsetXChange.emit(this.offsetXValue);\n    }\n  }\n\n  get offsetX(): number {\n    return this.offsetXValue;\n  }\n\n  @Input()\n  set offsetY(val) {\n    if (this.offsetXValue !== val) {\n      this.offsetYValue = val;\n      this.offsetYChange.emit(this.offsetYValue);\n    }\n  }\n\n  get offsetY(): number {\n    return this.offsetYValue;\n  }\n\n  get width(): number {\n    return this.widthValue;\n  }\n\n  @Input()\n  set width(val) {\n    if (this.widthValue !== val) {\n      this.widthValue = val;\n      this.widthChange.emit(this.widthValue);\n    }\n  }\n\n  get height(): number {\n    return this.heightValue;\n  }\n\n  @Input()\n  set height(val) {\n    if (this.heightValue !== val) {\n      this.heightValue = val;\n      this.heightChange.emit(this.heightValue);\n    }\n  }\n\n  @Input()\n  set switch(val) {\n    if (this.switchValue !== val) {\n      this.switchValue = val;\n      this.invalidateDrawing();\n    }\n  }\n\n  get switch(): boolean {\n    return this.switchValue;\n  }\n\n  get mousePosition(): IPoint {\n    return this.pointerPosition;\n  }\n\n  ngOnInit(): void {\n    this.offscreenCanvas = document.createElement('canvas');\n    this.canvasValid = true;\n  }\n\n  ngAfterViewInit(): void {\n    // this.context = this.canvasRef.nativeElement.getContext('2d');\n    this.context = this.offscreenCanvas.getContext('2d', { alpha: false });\n    window.onresize = this.resizeCanvas.bind(this);\n    requestAnimationFrame(() => this.resizeCanvas(this.divElement));\n  }\n\n  private resizeCanvas(_: UIEvent): void {\n    const el: HTMLDivElement = this.divElement.nativeElement;\n    this.width = el.clientWidth;\n    this.height = el.clientHeight;\n    this.offscreenCanvas.width = this.width;\n    this.offscreenCanvas.height = this.height;\n    this.canvasRef.nativeElement.width = el.clientWidth;\n    this.canvasRef.nativeElement.height = el.clientHeight;\n    this.invalidateDrawing();\n  }\n\n\n  ngOnChanges(): void {\n    // this.context = this.canvasRef.nativeElement.getContext('2d');\n    if (this.offscreenCanvas) {\n      this.context = this.offscreenCanvas.getContext('2d', { alpha: false });\n      this.invalidateDrawing();\n    }\n  }\n\n  invalidateDrawing(): void {\n    if (this.canvasValid) {\n      this.canvasValid = false;\n      // this.cancelRefreshCounter++;\n      // if (this.cancelRefreshCounter < 10)\n      //  cancelAnimationFrame(this.lastRefreshHandle);\n      // else\n      //  this.cancelRefreshCounter = 0;\n      // this.lastRefreshHandle = requestAnimationFrame(() => this.drawOffscreen());\n      requestAnimationFrame(() => this.drawOffscreen());\n    }\n  }\n\n  line(x1: number, y1: number, x2: number, y2: number, strokeStyle: string = '#F3E5F5'): void {\n    this.context.strokeStyle = strokeStyle;\n    this.context.beginPath();\n    this.context.moveTo(this.toDeviceX(x1), this.toDeviceY(y1));\n    this.context.lineTo(this.toDeviceX(x2), this.toDeviceY(y2));\n    this.context.stroke();\n  }\n\n  polyline(points: IPoint[], strokeStyle: string = '#F3E5F5'): void {\n    this.context.strokeStyle = strokeStyle;\n    this.context.beginPath();\n    for (let i = 0; i < points.length; i++) {\n      if (i === 0) {\n        this.context.moveTo(this.toDeviceX(points[i].x), this.toDeviceY(points[i].y));\n      }\n      else {\n        this.context.lineTo(this.toDeviceX(points[i].x), this.toDeviceY(points[i].y));\n      }\n    }\n    this.context.stroke();\n  }\n\n  polygon(points: IPoint[], strokeStyle: string = '#F3E5F5', fillStyle?: string): void {\n    this.context.strokeStyle = strokeStyle;\n    this.context.beginPath();\n    for (let i = 0; i < points.length; i++) {\n      if (i === 0) {\n        this.context.moveTo(this.toDeviceX(points[i].x), this.toDeviceY(points[i].y));\n      }\n      else {\n        this.context.lineTo(this.toDeviceX(points[i].x), this.toDeviceY(points[i].y));\n      }\n    }\n    this.context.closePath();\n\n    if (fillStyle) {\n      const oldFill = this.context.fillStyle;\n      this.context.fillStyle = fillStyle;\n      this.context.fill();\n      this.context.fillStyle = oldFill;\n    }\n\n    this.context.stroke();\n  }\n\n  bezierCurve(x1: number, y1: number, cp1x: number, cp1y: number, cp2x: number, cp2y: number, x2: number, y2: number, strokeStyle: string = '#F3E5F5'): void {\n    this.context.strokeStyle = strokeStyle;\n    this.context.beginPath();\n    this.context.moveTo(this.toDeviceX(x1), this.toDeviceY(y1));\n    this.context.bezierCurveTo(this.toDeviceX(cp1x), this.toDeviceY(cp1y),\n      this.toDeviceX(cp2x), this.toDeviceY(cp2y), this.toDeviceX(x2), this.toDeviceY(y2));\n    this.context.stroke();\n  }\n\n  rect(x1: number, y1: number, w: number, h: number, strokeStyle: string = '#F3E5F5'): void {\n    this.context.strokeStyle = strokeStyle;\n    const width = this.toDeviceScale(w);\n    const height = this.toDeviceScale(h);\n    this.context.strokeRect(this.toDeviceX(x1), this.toDeviceY(y1) - height, width, height);\n  }\n\n  text(text: string, x: number, y: number, font: string = null, strokeStyle: string = '#F3E5F5'): void {\n    x = this.toDeviceX(x);\n    y = this.toDeviceY(y);\n    /// color for background\n    this.context.fillStyle = '#303030';\n    /// get width of text\n    const oldFont = this.context.font;\n    if (font) {\n      this.context.font = font;\n    }\n    const width = this.context.measureText(text).width;\n    /// draw background rect assuming height of font\n    this.context.fillRect(x - width / 2.0, y - 6, width, 12);\n\n    this.context.fillStyle = strokeStyle;\n    this.context.textBaseline = 'middle';\n    this.context.textAlign = 'center';\n    this.context.fillText(text, x, y, width);\n    if (font) {\n      this.context.font = oldFont;\n    }\n  }\n\n  image(img: ImageBitmap, x: number, y: number, width: number, height: number, scale: number): void {\n    x = this.toDeviceX(x);\n    y = this.toDeviceY(y);\n    width = this.toDeviceScale(width * scale);\n    height = this.toDeviceScale(height * scale);\n\n    this.context.drawImage(img, 0, 0, img.width, img.height, x, y - height, width, height);\n  }\n\n  fromDeviceScale(val: number): number {\n    return val / this.scale;\n  }\n\n  toDeviceScale(val: number): number {\n    return val * this.scale;\n  }\n\n  toDeviceX(val: number): number {\n    return this.center.x +\n      this.toDeviceScale(this.offsetX) +\n      this.toDeviceScale(val);\n  }\n\n  toDeviceY(val: number): number {\n    return this.center.y -\n      this.toDeviceScale(this.offsetY) -\n      this.toDeviceScale(val);\n  }\n\n  getCenter(): Point {\n    const el: HTMLDivElement = this.divElement.nativeElement;\n    const centerX = el.clientWidth / 2.0 - el.offsetLeft / 2.0;\n    const centerY = el.clientHeight / 2.0 - el.offsetTop / 2.0;\n    return new Point(centerX, centerY);\n  }\n\n  drawData(): void {\n    if (this.offscreenCanvas.width > 0 && this.offscreenCanvas.height > 0) {\n      const ctx = this.canvasRef.nativeElement.getContext('2d', { alpha: false });\n      ctx.clearRect(0, 0, this.width, this.height);\n      ctx.drawImage(this.offscreenCanvas, 0, 0);\n    }\n  }\n\n  drawOffscreen(): void {\n    if (!this.canvasValid) {\n      this.canvasValid = true;\n      this.center = this.getCenter();\n\n      this.context.lineWidth = 1;\n      this.context.clearRect(0, 0, this.context.canvas.width, this.context.canvas.height);\n      this.context.fillStyle = '#303030';\n      this.context.fillRect(0, 0, this.context.canvas.width, this.context.canvas.height);\n\n      if (this.drawItems != null) {\n        for (const entry of this.drawItems) {\n          if (entry.getLayer() < 0) {\n            entry.draw(this);\n          }\n        }\n      }\n\n      this.drawGrid();\n\n      if (this.drawItems != null) {\n        for (const entry of this.drawItems) {\n          if (entry.getLayer() >= 0) {\n            entry.draw(this);\n          }\n        }\n      }\n\n      this.drawVerticalRuler();\n      this.drawHorizontalRuler();\n\n      requestAnimationFrame(() => this.drawData());\n    }\n  }\n\n  toLogical(point: Point): Point {\n    const result = new Point(point.x, point.y);\n\n    result.x = this.fromDeviceScale(point.x) -\n      this.offsetX -\n      this.fromDeviceScale(this.center.x);\n\n    result.y = -(this.fromDeviceScale(point.y - this.center.y) + this.offsetY);\n\n    return result;\n  }\n\n  drawHorizontalRuler(): void {\n    const center = new Point(this.center.x, this.center.y);\n    center.x += this.toDeviceScale(this.offsetX);\n    center.y -= this.toDeviceScale(this.offsetY);\n    let step = this.toDeviceScale(10);\n\n    while (step < 5) {\n      step /= 0.40;\n    }\n\n    while (step > 15) {\n      step *= 0.40;\n    }\n\n    this.context.lineWidth = 0.25;\n    this.context.strokeStyle = '#FFFFFF';\n    this.context.beginPath();\n\n    let len = 10;\n    let cnt = 0;\n\n    for (let x = center.x; x >= 0; x -= step) {\n      this.context.moveTo(x, 10);\n      this.context.lineTo(x, len + 10);\n\n      cnt++;\n      if (len === 10) {\n        this.drawRulerText(x, 0, true);\n        cnt = 0;\n        len = 5;\n      } else if (cnt >= 4) {\n        len = 10;\n      }\n    }\n\n    len = 5;\n    cnt = 0;\n\n    for (let x = center.x + step; x <= this.context.canvas.width; x += step) {\n      this.context.moveTo(x, 10);\n      this.context.lineTo(x, len + 10);\n\n      cnt++;\n      if (len === 10) {\n        this.drawRulerText(x, 0, true);\n        cnt = 0;\n        len = 5;\n      } else if (cnt >= 4) {\n        len = 10;\n      }\n    }\n\n    this.context.closePath();\n    this.context.stroke();\n  }\n\n  drawVerticalRuler(): void {\n    const center = new Point(this.center.x, this.center.y);\n    center.x += this.toDeviceScale(this.offsetX);\n    center.y -= this.toDeviceScale(this.offsetY);\n    let step = this.toDeviceScale(10);\n\n    while (step < 5) {\n      step /= 0.40;\n    }\n\n    while (step > 15) {\n      step *= 0.40;\n    }\n\n    this.context.lineWidth = 0.25;\n    this.context.strokeStyle = '#FFFFFF';\n\n    this.context.beginPath();\n\n    let len = 10;\n    let cnt = 0;\n\n    for (let y = center.y; y >= 0; y -= step) {\n      this.context.moveTo(0, y);\n      this.context.lineTo(len, y);\n\n      cnt++;\n      if (len === 10) {\n        this.drawRulerText(12, y, false);\n        cnt = 0;\n        len = 5;\n      } else if (cnt >= 4) {\n        len = 10;\n      }\n    }\n\n    len = 5;\n    cnt = 0;\n\n    for (let y = center.y + step; y <= this.context.canvas.height; y += step) {\n      this.context.moveTo(0, y);\n      this.context.lineTo(len, y);\n\n      cnt++;\n      if (len === 10) {\n        this.drawRulerText(12, y, false);\n        cnt = 0;\n        len = 5;\n      } else if (cnt >= 4) {\n        len = 10;\n      }\n    }\n\n    this.context.closePath();\n    this.context.stroke();\n  }\n\n  drawRulerText(x: number, y: number, horizontal: boolean): void {\n    const logicalPt = this.toLogical(new Point(x, y));\n    const text = horizontal ? Math.round(logicalPt.x).toString() : Math.round(logicalPt.y).toString();\n\n    ///// color for background\n    // this.context.fillStyle = '#303030';\n    ///// get width of text\n    const width = this.context.measureText(text).width;\n    ///// draw background rect assuming height of font\n    // this.context.fillRect(x - width / 2.0, y - 6, width, 12);\n\n    this.context.fillStyle = '#FFFFFF4A';\n    if (horizontal) {\n      this.context.textBaseline = 'top';\n    }\n    else {\n      this.context.textBaseline = 'middle';\n    }\n\n    if (horizontal) {\n      this.context.textAlign = 'center';\n    }\n    else {\n      this.context.textAlign = 'start';\n    }\n\n    this.context.fillText(text, x, y, width);\n  }\n\n  drawGrid(): void {\n    const center = new Point(this.center.x, this.center.y);\n    center.x += this.toDeviceScale(this.offsetX);\n    center.y -= this.toDeviceScale(this.offsetY);\n    let step = this.toDeviceScale(10);\n\n    while (step < 5) {\n      step /= 0.40;\n    }\n\n    while (step > 15) {\n      step *= 0.40;\n    }\n\n    this.context.lineWidth = 0.25;\n    this.context.strokeStyle = '#3C3C3C';\n    // this.context.strokeStyle = \"#FFFFFF\";\n    this.context.setLineDash([4, 2]);\n    this.context.beginPath();\n\n    for (let x = center.x; x >= 0; x -= step) {\n      this.context.moveTo(x, 0);\n      this.context.lineTo(x, this.context.canvas.height);\n    }\n\n    for (let x = center.x + step; x <= this.context.canvas.width; x += step) {\n      this.context.moveTo(x, 0);\n      this.context.lineTo(x, this.context.canvas.height);\n    }\n\n    for (let y = center.y; y >= 0; y -= step) {\n      this.context.moveTo(0, y);\n      this.context.lineTo(this.context.canvas.width, y);\n    }\n\n    for (let y = center.y + step; y <= this.context.canvas.height; y += step) {\n      this.context.moveTo(0, y);\n      this.context.lineTo(this.context.canvas.width, y);\n    }\n\n    this.context.closePath();\n    this.context.stroke();\n\n    step = step * 5;\n    this.context.lineWidth = 0.5;\n    this.context.strokeStyle = '#3C3C3C';\n    this.context.beginPath();\n\n    const hw = 0.5;\n    const w = 1;\n\n    for (let x = center.x; x >= 0; x -= step) {\n      for (let y = center.y; y >= 0; y -= step) {\n        this.context.strokeRect(x - hw, y - hw, w, w);\n      }\n\n      for (let y = center.y + step; y <= this.context.canvas.height; y += step) {\n        this.context.strokeRect(x - hw, y - hw, w, w);\n      }\n    }\n\n    for (let x = center.x + step; x <= this.context.canvas.width; x += step) {\n      for (let y = center.y; y >= 0; y -= step) {\n        this.context.strokeRect(x - hw, y - hw, w, w);\n      }\n\n      for (let y = center.y + step; y <= this.context.canvas.height; y += step) {\n        this.context.strokeRect(x - hw, y - hw, w, w);\n      }\n    }\n\n    this.context.closePath();\n    this.context.stroke();\n    this.context.setLineDash([]);\n\n    // this.context.strokeStyle = \"#000000\";\n    // this.context.lineWidth = 1;\n    // this.context.beginPath();\n\n    // this.context.strokeRect(center.x - 2, center.y - 2, 4, 4);\n    // this.context.stroke();\n\n    if (this.drawAxises) {\n      this.drawCoordinateSystem();\n    }\n  }\n\n  private drawCoordinateSystem(): void {\n    const calcHeight = this.height - this.divElement.nativeElement.offsetTop;\n\n    this.context.lineWidth = 1;\n    this.context.strokeStyle = '#00BFA5';\n    this.context.beginPath();\n    this.context.moveTo(40, calcHeight - 40);\n    this.context.lineTo(40, calcHeight - 140);\n    this.context.lineTo(45, calcHeight - 135);\n    this.context.lineTo(35, calcHeight - 135);\n    this.context.lineTo(40, calcHeight - 140);\n    this.context.stroke();\n\n    this.context.lineWidth = 1;\n    this.context.strokeStyle = '#0091EA';\n    this.context.beginPath();\n    this.context.moveTo(40, calcHeight - 40);\n    this.context.lineTo(140, calcHeight - 40);\n    this.context.lineTo(135, calcHeight - 35);\n    this.context.lineTo(135, calcHeight - 45);\n    this.context.lineTo(140, calcHeight - 40);\n    this.context.stroke();\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMousedown(event): void {\n    if (this.isPan) {\n      return;\n    }\n    const pt = new Point(event.clientX, event.clientY - this.divElement.nativeElement.offsetTop);\n    this.stateEvent = event;\n    const sd = new SurfaceData(pt, this.toLogical(pt), this, event, this.stateEvent);\n    this.down.emit(sd);\n  }\n\n  @HostListener('mousemove', ['$event'])\n  onMousemove(event: MouseEvent): void {\n    if (this.isPan) {\n      return;\n    }\n    const pt = new Point(event.clientX, event.clientY - this.divElement.nativeElement.offsetTop);\n    const sd = new SurfaceData(pt, this.toLogical(pt), this, event, this.stateEvent);\n    this.pointerPosition = sd.modelPoint;\n    this.move.emit(sd);\n  }\n\n  @HostListener('mouseup', ['$event'])\n  onMouseup(event: MouseEvent): void {\n    if (this.isPan) {\n      return;\n    }\n    const pt = new Point(event.clientX, event.clientY - this.divElement.nativeElement.offsetTop);\n    const sd = new SurfaceData(pt, this.toLogical(pt), this, event, this.stateEvent);\n    this.up.emit(sd);\n    this.stateEvent = event;\n  }\n\n  @HostListener('touchstart', ['$event'])\n  protected onPanStart(event): void {\n    if (event.touches && event.touches.length > 0) {\n      this.isPan = true;\n      this.stateEvent = event;\n      event.preventDefault();\n      const touch = event.touches[0];\n      const pt = new Point(touch.clientX, touch.clientY - this.divElement.nativeElement.offsetTop);\n      const sd = new SurfaceData(pt, this.toLogical(pt), this, event, this.stateEvent);\n      this.down.emit(sd);\n    }\n  }\n\n  @HostListener('touchmove', ['$event'])\n  protected onPanMove(event): void {\n    if (event.touches && event.touches.length > 0) {\n      event.preventDefault();\n      const touch = event.touches[0];\n      const pt = new Point(touch.clientX, touch.clientY - this.divElement.nativeElement.offsetTop);\n      const sd = new SurfaceData(pt, this.toLogical(pt), this, event, this.stateEvent);\n      this.move.emit(sd);\n    }\n  }\n\n  @HostListener('touchend', ['$event'])\n  protected onPanEnd(event): void {\n    if (event.changedTouches && event.changedTouches.length > 0) {\n      this.isPan = false;\n      event.preventDefault();\n      const touch = event.changedTouches[0];\n      const pt = new Point(touch.clientX, touch.clientY - this.divElement.nativeElement.offsetTop);\n      const sd = new SurfaceData(pt, this.toLogical(pt), this, event, this.stateEvent);\n      this.up.emit(sd);\n      this.stateEvent = event;\n    }\n  }\n\n  @HostListener('mousewheel', ['$event'])\n  onMousewheel(event): void {\n    const pt = new Point(event.clientX, event.clientY - this.divElement.nativeElement.offsetTop);\n    const sd = new SurfaceData(pt, this.toLogical(pt), this, event, this.stateEvent);\n    this.wheelRotate.emit(sd);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SurfaceDrawComponent } from './surface-draw.component';\n\n@NgModule({\n  declarations: [SurfaceDrawComponent],\n  imports: [\n  ],\n  exports: [SurfaceDrawComponent]\n})\nexport class SurfaceDrawModule { }\n"]}